{"version":3,"sources":["App.js","index.js"],"names":["App","specialDate","useState","dateIsChosen","setDateAsChosen","dateIsSetUp","setUpDate","day","setDay","month","setMonth","year","setYear","counterDuration","years","setYears","days","setDays","useEffect","firstDate","Date","getFullYear","secondDate","moment","fromNow","Math","round","abs","time","icon","faHeart","changeDay","format","changeMonth","changeYear","setTimeout","tellHerILoveYou","formatValue","value","body","document","querySelector","message","createElement","innerHTML","className","i","msg","cloneNode","appendChild","htmlFor","type","name","onChange","duration","ReactDOM","render","StrictMode","getElementById"],"mappings":"oRA2HeA,EApHH,WACV,IAAMC,EAAc,aADJ,EAEwBC,oBAAS,GAFjC,mBAETC,EAFS,KAEKC,EAFL,OAGiBF,oBAAS,GAH1B,mBAGTG,EAHS,KAGIC,EAHJ,OAIMJ,mBAAS,MAJf,mBAITK,EAJS,KAIJC,EAJI,OAKUN,mBAAS,MALnB,mBAKTO,EALS,KAKFC,EALE,OAMQR,mBAAS,QANjB,mBAMTS,EANS,KAMHC,EANG,OAOUV,mBAAS,KAA5BW,EAPS,sBAQUX,mBAAS,GARnB,mBAQTY,EARS,KAQFC,EARE,OASQb,mBAAS,GATjB,mBASTc,EATS,KASHC,EATG,KAWhBC,qBAAU,WACR,IACMC,EAAY,IAAIC,MAAK,IAAIA,MAAOC,cAAe,EAAG,GAClDC,EAAa,IAAIF,KAEvBL,EAASQ,IAAOtB,GAAauB,SAAQ,IACrCP,EAAQQ,KAAKC,MAAMD,KAAKE,KAAKR,EAAYG,GAL1B,WAMd,IAEH,IAAMM,EACJ,+BACGd,EADH,MACaE,EAAO,EAAIA,EAAO,SAAW,SACxC,cAAC,IAAD,CAAiBa,KAAMC,SASrBC,EAAY,WAChBvB,EAAOe,IAAOtB,GAAa+B,OAAO,OAClCC,KAGIA,EAAc,WAClBvB,EAASa,IAAOtB,GAAa+B,OAAO,OACpCE,KAGIA,EAAa,WACjBtB,EAAQW,IAAOtB,GAAa+B,OAAO,SACnCG,YAAW,WACT7B,GAAU,KACT,KACH6B,YAAW,WACTC,MACC,MAGCC,EAAc,SAACC,GAAD,iBAAeA,IAU7BF,EAAkB,WACtB,IAAMG,EAAOC,SAASC,cAAc,SAC9BC,EAAUF,SAASG,cAAc,MACvCD,EAAQE,UAAY,oBACpBF,EAAQG,UAAY,YACpB,IAAK,IAAIC,EAAI,EAAGA,EAAI,KAAMA,IAAK,CAC7B,IAAMC,EAAML,EAAQM,WAAU,GAC9BT,EAAKU,YAAYF,KAIrB,OACE,sBAAKF,UAAU,MAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,uBAAOK,QAAQ,OAAOL,UAAU,QAAhC,SACE,wDAEF,uBACEM,KAAK,OACLC,KAAK,OACLP,UAAU,0BACVQ,SAxDe,WACrBjD,GAAgB,GAChB2B,UA0DE,uBAEA,qBAAIc,UAAU,iBAAd,UACE,cAAC,IAAD,CACEP,MAAO/B,EACP8B,YAAaA,EACbiB,SAAUzC,IAEZ,cAAC,IAAD,CACEyB,MAAO7B,EACP4B,YAAaA,EACbiB,SAAUzC,IAEZ,cAAC,IAAD,CACEyB,MAAO3B,EACP0B,YAhDgB,SAACC,GACvB,OAAInC,EACKmC,EAED,MAAN,OAAaA,IA6CTgB,SAAUzC,OAId,qBAAKgC,UAAU,iBAAf,UACmB,IAAhBxC,EAAuB,+BAAOuB,IAAe,2BAGhD,qBAAKiB,UAAU,uBCjHrBU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASkB,eAAe,W","file":"static/js/main.0fdc2721.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport moment from \"moment\";\nimport AnimatedNumber from \"animated-number-react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\n\nconst App = () => {\n  const specialDate = \"2020-04-03\";\n  const [dateIsChosen, setDateAsChosen] = useState(false);\n  const [dateIsSetUp, setUpDate] = useState(false);\n  const [day, setDay] = useState(\"00\");\n  const [month, setMonth] = useState(\"00\");\n  const [year, setYear] = useState(\"0000\");\n  const [counterDuration] = useState(3000);\n  const [years, setYears] = useState(0);\n  const [days, setDays] = useState(0);\n\n  useEffect(() => {\n    const oneDay = 24 * 60 * 60 * 1000;\n    const firstDate = new Date(new Date().getFullYear(), 3, 3);\n    const secondDate = new Date();\n\n    setYears(moment(specialDate).fromNow(true));\n    setDays(Math.round(Math.abs((firstDate - secondDate) / oneDay)));\n  }, []);\n\n  const time = (\n    <h2>\n      {years} & {days > 1 ? days + \" days \" : \"a day \"}\n      <FontAwesomeIcon icon={faHeart} />\n    </h2>\n  );\n\n  const handleinputDay = () => {\n    setDateAsChosen(true);\n    changeDay();\n  };\n\n  const changeDay = () => {\n    setDay(moment(specialDate).format(\"DD\"));\n    changeMonth();\n  };\n\n  const changeMonth = () => {\n    setMonth(moment(specialDate).format(\"MM\"));\n    changeYear();\n  };\n\n  const changeYear = () => {\n    setYear(moment(specialDate).format(\"YYYY\"));\n    setTimeout(() => {\n      setUpDate(true);\n    }, 5000);\n    setTimeout(() => {\n      tellHerILoveYou();\n    }, 7000);\n  };\n\n  const formatValue = (value) => `0${value}`;\n\n  const formatYearValue = (value) => {\n    if (dateIsChosen) {\n      return value;\n    } else {\n      return `000${value}`;\n    }\n  };\n\n  const tellHerILoveYou = () => {\n    const body = document.querySelector(\".love\");\n    const message = document.createElement(\"h5\");\n    message.innerHTML = \"I love you Layla!\";\n    message.className = \"mt-5 mb-2\";\n    for (let i = 1; i < 2020; i++) {\n      const msg = message.cloneNode(true);\n      body.appendChild(msg);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"date-picker mt-5 mb-5\">\n        <label htmlFor=\"date\" className=\" mb-2\">\n          <h4>Choose a Random Date</h4>\n        </label>\n        <input\n          type=\"date\"\n          name=\"date\"\n          className=\"btn-light  form-control\"\n          onChange={handleinputDay}\n        />\n      </div>\n\n      <br />\n\n      <h1 className=\"date mt-5 mb-5\">\n        <AnimatedNumber\n          value={day}\n          formatValue={formatValue}\n          duration={counterDuration}\n        />\n        <AnimatedNumber\n          value={month}\n          formatValue={formatValue}\n          duration={counterDuration}\n        />\n        <AnimatedNumber\n          value={year}\n          formatValue={formatYearValue}\n          duration={counterDuration}\n        />\n      </h1>\n\n      <div className=\"time mt-5 mb-5\">\n        {dateIsSetUp === true ? <span>{time}</span> : <span></span>}\n      </div>\n\n      <div className=\"love mt-5 mb-5\" />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}