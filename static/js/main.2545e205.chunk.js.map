{"version":3,"sources":["App.js","index.js"],"names":["App","specialDate","useState","dateIsChosen","setDateAsChosen","dateIsSetUp","setUpDate","day","setDay","month","setMonth","year","setYear","counterDuration","years","setYears","months","setMonths","days","setDays","useEffect","currentYear","moment","format","currentMonth","currentDay","currentDate","parseInt","passedDate","_years","diff","add","_months","_days","time","icon","faHeart","tellHerILoveYou","body","document","querySelector","message","createElement","innerHTML","className","i","msg","cloneNode","appendChild","formatValue","value","htmlFor","type","name","onChange","setTimeout","duration","ReactDOM","render","StrictMode","getElementById"],"mappings":"oRA8IeA,EAvIH,WACV,IAAMC,EAAc,aADJ,EAEwBC,oBAAS,GAFjC,mBAETC,EAFS,KAEKC,EAFL,OAGiBF,oBAAS,GAH1B,mBAGTG,EAHS,KAGIC,EAHJ,OAIMJ,mBAAS,MAJf,mBAITK,EAJS,KAIJC,EAJI,OAKUN,mBAAS,MALnB,mBAKTO,EALS,KAKFC,EALE,OAMQR,mBAAS,QANjB,mBAMTS,EANS,KAMHC,EANG,OAOUV,mBAAS,KAA5BW,EAPS,sBAQUX,mBAAS,GARnB,mBAQTY,EARS,KAQFC,EARE,OASYb,mBAAS,GATrB,mBASTc,EATS,KASDC,EATC,OAUQf,mBAAS,GAVjB,mBAUTgB,EAVS,KAUHC,EAVG,KAYhBC,qBAAU,WACR,IAAMC,EAAcC,MAASC,OAAO,QAC9BC,EAAeF,MAASC,OAAO,MAC/BE,EAAaH,MAASC,OAAO,MAC7BG,EAAcJ,IAAO,CACzBK,SAASN,GACTM,SAASH,GACTG,SAASF,KAELG,EAAaN,IAAO,CAAC,KAAM,EAAG,IAE9BO,EAASH,EAAYI,KAAKF,EAAY,SAC5Cb,EAASc,GACTD,EAAWG,IAAIF,EAAQ,SAEvB,IAAMG,EAAUN,EAAYI,KAAKF,EAAY,UAC7CX,EAAUe,GACVJ,EAAWG,IAAIC,EAAS,UAExB,IAAMC,EAAQP,EAAYI,KAAKF,EAAY,QAC3CT,EAAQc,KACP,IAEH,IAAMC,EACJ,+BACa,IAAVpB,EACG,GACU,IAAVA,EACA,IAAMA,EAAQ,QACd,IAAMA,EAAQ,SACN,IAAXE,EACG,GACW,IAAXA,EACA,IAAMA,EAAS,SACf,IAAMA,EAAS,UACT,IAATE,EACG,GACS,IAATA,EACA,IAAMA,EAAO,OACb,IAAMA,EAAO,QAAS,IAC1B,cAAC,IAAD,CAAiBiB,KAAMC,SAmBrBC,EAAkB,WACtB,IAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAUF,SAASG,cAAc,MACvCD,EAAQE,UAAY,oBACpBF,EAAQG,UAAY,YACpB,IAAK,IAAIC,EAAI,EAAGA,EAAI,KAAMA,IAAK,CAC7B,IAAMC,EAAML,EAAQM,WAAU,GAC9BT,EAAKU,YAAYF,KAIfG,EAAc,SAACC,GAAD,iBAAeA,IAUnC,OACE,sBAAKN,UAAU,MAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,uBAAOO,QAAQ,OAAOP,UAAU,QAAhC,SACE,wDAEF,uBACEQ,KAAK,OACLC,KAAK,OACLT,UAAU,0BACVU,SA9CgB,WACtBlD,GAAgB,GAChBI,EAAOc,IAAOrB,GAAasB,OAAO,OAClCb,EAASY,IAAOrB,GAAasB,OAAO,OACpCX,EAAQU,IAAOrB,GAAasB,OAAO,SAEnCgC,YAAW,WACTjD,GAAU,KACT,KAEHiD,YAAW,WACTlB,MACC,WAsCD,uBAEA,qBAAIO,UAAU,iBAAd,UACE,cAAC,IAAD,CACEM,MAAO3C,EACP0C,YAAaA,EACbO,SAAU3C,IAEZ,cAAC,IAAD,CACEqC,MAAOzC,EACPwC,YAAaA,EACbO,SAAU3C,IAEZ,cAAC,IAAD,CACEqC,MAAOvC,EACPsC,YArCgB,SAACC,GACvB,OAAI/C,EACK+C,EAED,MAAN,OAAaA,IAkCTM,SAAU3C,OAId,qBAAK+B,UAAU,iBAAf,UACmB,IAAhBvC,EAAuB,+BAAO6B,IAAe,2BAGhD,qBAAKU,UAAU,uBCpIrBa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,W","file":"static/js/main.2545e205.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport moment from \"moment\";\nimport AnimatedNumber from \"animated-number-react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\n\nconst App = () => {\n  const specialDate = \"2020-04-03\";\n  const [dateIsChosen, setDateAsChosen] = useState(false);\n  const [dateIsSetUp, setUpDate] = useState(false);\n  const [day, setDay] = useState(\"00\");\n  const [month, setMonth] = useState(\"00\");\n  const [year, setYear] = useState(\"0000\");\n  const [counterDuration] = useState(3000);\n  const [years, setYears] = useState(0);\n  const [months, setMonths] = useState(0);\n  const [days, setDays] = useState(0);\n\n  useEffect(() => {\n    const currentYear = moment().format(\"YYYY\");\n    const currentMonth = moment().format(\"MM\");\n    const currentDay = moment().format(\"DD\");\n    const currentDate = moment([\n      parseInt(currentYear),\n      parseInt(currentMonth),\n      parseInt(currentDay),\n    ]);\n    const passedDate = moment([2020, 4, 3]);\n\n    const _years = currentDate.diff(passedDate, \"years\");\n    setYears(_years);\n    passedDate.add(_years, \"years\");\n\n    const _months = currentDate.diff(passedDate, \"months\");\n    setMonths(_months);\n    passedDate.add(_months, \"months\");\n\n    const _days = currentDate.diff(passedDate, \"days\");\n    setDays(_days);\n  }, []);\n\n  const time = (\n    <h2>\n      {years === 0\n        ? \"\"\n        : years === 1\n        ? \" \" + years + \" year\"\n        : \" \" + years + \" years\"}\n      {months === 0\n        ? \"\"\n        : months === 1\n        ? \" \" + months + \" month\"\n        : \" \" + months + \" months\"}\n      {days === 0\n        ? \"\"\n        : days === 1\n        ? \" \" + days + \" day\"\n        : \" \" + days + \" days\"}{\" \"}\n      <FontAwesomeIcon icon={faHeart} />\n    </h2>\n  );\n\n  const handleInputDate = () => {\n    setDateAsChosen(true);\n    setDay(moment(specialDate).format(\"DD\"));\n    setMonth(moment(specialDate).format(\"MM\"));\n    setYear(moment(specialDate).format(\"YYYY\"));\n\n    setTimeout(() => {\n      setUpDate(true);\n    }, 5000);\n\n    setTimeout(() => {\n      tellHerILoveYou();\n    }, 7000);\n  };\n\n  const tellHerILoveYou = () => {\n    const body = document.querySelector(\".love\");\n    const message = document.createElement(\"h5\");\n    message.innerHTML = \"I love you Layla!\";\n    message.className = \"mt-5 mb-2\";\n    for (let i = 1; i < 2020; i++) {\n      const msg = message.cloneNode(true);\n      body.appendChild(msg);\n    }\n  };\n\n  const formatValue = (value) => `0${value}`;\n\n  const formatYearValue = (value) => {\n    if (dateIsChosen) {\n      return value;\n    } else {\n      return `000${value}`;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"date-picker mt-5 mb-5\">\n        <label htmlFor=\"date\" className=\" mb-2\">\n          <h4>Choose a Random Date</h4>\n        </label>\n        <input\n          type=\"date\"\n          name=\"date\"\n          className=\"btn-light  form-control\"\n          onChange={handleInputDate}\n        />\n      </div>\n\n      <br />\n\n      <h1 className=\"date mt-5 mb-5\">\n        <AnimatedNumber\n          value={day}\n          formatValue={formatValue}\n          duration={counterDuration}\n        />\n        <AnimatedNumber\n          value={month}\n          formatValue={formatValue}\n          duration={counterDuration}\n        />\n        <AnimatedNumber\n          value={year}\n          formatValue={formatYearValue}\n          duration={counterDuration}\n        />\n      </h1>\n\n      <div className=\"time mt-5 mb-5\">\n        {dateIsSetUp === true ? <span>{time}</span> : <span></span>}\n      </div>\n\n      <div className=\"love mt-5 mb-5\" />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}